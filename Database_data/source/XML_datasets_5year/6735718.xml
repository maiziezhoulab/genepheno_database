<?xml version="1.0" ?>
<!DOCTYPE pmc-articleset PUBLIC "-//NLM//DTD ARTICLE SET 2.0//EN" "https://dtd.nlm.nih.gov/ncbi/pmc/articleset/nlm-articleset-2.0.dtd">

<pmc-articleset><article article-type="research-article" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink">
<?properties open_access?>
<front>
<journal-meta>
<journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
<journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
<journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
<journal-title-group>
<journal-title>Bioinformatics</journal-title>
</journal-title-group>
<issn pub-type="ppub">1367-4803</issn>
<issn pub-type="epub">1367-4811</issn>
<publisher>
<publisher-name>Oxford University Press</publisher-name>
</publisher>
</journal-meta>
<article-meta>
<article-id pub-id-type="pmid">30668829</article-id>
<article-id pub-id-type="pmc">6735718</article-id>
<article-id pub-id-type="doi">10.1093/bioinformatics/btz041</article-id>
<article-id pub-id-type="publisher-id">btz041</article-id>
<article-categories>
<subj-group subj-group-type="heading">
<subject>Original Papers</subject>
<subj-group subj-group-type="category-toc-heading">
<subject>Genome Analysis</subject>
</subj-group>
</subj-group>
</article-categories>
<title-group>
<article-title>SVIM: structural variant identification using mapped long reads</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id authenticated="false" contrib-id-type="orcid">http://orcid.org/0000-0001-8346-9565</contrib-id>
<name>
<surname>Heller</surname>
<given-names>David</given-names>
</name>
<xref ref-type="aff" rid="btz041-aff1"></xref>
</contrib>
<contrib contrib-type="author">
<name>
<surname>Vingron</surname>
<given-names>Martin</given-names>
</name>
<xref ref-type="corresp" rid="btz041-cor1"></xref>
<!--<email>vingron@molgen.mpg.de</email>-->
<xref ref-type="aff" rid="btz041-aff1"></xref>
</contrib>
</contrib-group>
<aff id="btz041-aff1">Department of Computational Molecular Biology, <institution>Max Planck Institute for Molecular Genetics</institution>, Berlin, Germany</aff>
<contrib-group>
<contrib contrib-type="editor">
<name>
<surname>Birol</surname>
<given-names>Inanc</given-names>
</name>
<role>Associate Editor</role>
</contrib>
</contrib-group>
<author-notes>
<corresp id="btz041-cor1">To whom correspondence should be addressed. E-mail: <email>vingron@molgen.mpg.de</email></corresp>
</author-notes>
<pub-date pub-type="ppub">
<day>01</day>
<month>9</month>
<year>2019</year>
</pub-date>
<pub-date iso-8601-date="2019-01-21" pub-type="epub">
<day>21</day>
<month>1</month>
<year>2019</year>
</pub-date>
<pub-date pub-type="pmc-release">
<day>21</day>
<month>1</month>
<year>2019</year>
</pub-date>
<!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
<volume>35</volume>
<issue>17</issue>
<fpage>2907</fpage>
<lpage>2915</lpage>
<history>
<date date-type="received">
<day>26</day>
<month>7</month>
<year>2018</year>
</date>
<date date-type="rev-recd">
<day>04</day>
<month>1</month>
<year>2019</year>
</date>
<date date-type="accepted">
<day>22</day>
<month>1</month>
<year>2019</year>
</date>
</history>
<permissions>
<copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
<copyright-year>2019</copyright-year>
<license license-type="cc-by" xlink:href="http://creativecommons.org/licenses/by/4.0/">
<license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
</license>
</permissions>
<self-uri xlink:href="btz041.pdf"></self-uri>
<abstract>
<title>Abstract</title>
<sec id="s1">
<title>Motivation</title>
<p>Structural variants are defined as genomic variants larger than 50 bp. They have been shown to affect more bases in any given genome than single-nucleotide polymorphisms or small insertions and deletions. Additionally, they have great impact on human phenotype and diversity and have been linked to numerous diseases. Due to their size and association with repeats, they are difficult to detect by shotgun sequencing, especially when based on short reads. Long read, single-molecule sequencing technologies like those offered by Pacific Biosciences or Oxford Nanopore Technologies produce reads with a length of several thousand base pairs. Despite the higher error rate and sequencing cost, long-read sequencing offers many advantages for the detection of structural variants. Yet, available software tools still do not fully exploit the possibilities.</p>
</sec>
<sec id="s2">
<title>Results</title>
<p>We present SVIM, a tool for the sensitive detection and precise characterization of structural variants from long-read data. SVIM consists of three components for the collection, clustering and combination of structural variant signatures from read alignments. It discriminates five different variant classes including similar types, such as tandem and interspersed duplications and novel element insertions. SVIM is unique in its capability of extracting both the genomic origin and destination of duplications. It compares favorably with existing tools in evaluations on simulated data and real datasets from Pacific Biosciences and Nanopore sequencing machines.</p>
</sec>
<sec id="s3">
<title>Availability and implementation</title>
<p>The source code and executables of SVIM are available on Github: github.com/eldariont/svim. SVIM has been implemented in Python 3 and published on bioconda and the Python Package Index.</p>
</sec>
<sec id="s4">
<title>Supplementary information</title>
<p>
<xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
</sec>
</abstract>
<funding-group>
<award-group award-type="grant">
<funding-source>
<named-content content-type="funder-name">International Max Planck Research School for Computational Biology and Scientific Computing</named-content>
</funding-source>
</award-group>
</funding-group>
<counts>
<page-count count="9"></page-count>
</counts>
</article-meta>
</front>
<body>
<sec>
<title>1 Introduction</title>
<p>A typical human genome differs from the reference genome at ∼4–5 million sites amounting to ∼20 million altered bases (<xref ref-type="bibr" rid="btz041-B1">1000 Genomes Project Consortium, 2015</xref>). These variations can be categorized into single-nucleotide polymorphisms (SNPs), small insertions and deletions (Indels) and structural variation (SV) affecting a larger number of base pairs. Typically, differences larger than 50 bp are considered SVs although definitions vary and sometimes overlap with those of Indels.</p>
<p>Studies have shown that in human more base pairs are altered due to SV than due to SNPs (<xref ref-type="bibr" rid="btz041-B27">Redon <italic>et al.</italic>, 2006</xref>; <xref ref-type="bibr" rid="btz041-B36">Weischenfeldt <italic>et al.</italic>, 2013</xref>). Additionally, SVs are enriched 50-fold for expression quantitative trait loci when compared to SNPs (<xref ref-type="bibr" rid="btz041-B35">Sudmant <italic>et al.</italic>, 2015</xref>). Unsurprisingly, SVs have a major influence on human diversity and are implicated in a wide range of diseases from autism and other neurological diseases to cancer and obesity (<xref ref-type="bibr" rid="btz041-B30">Sebat <italic>et al.</italic>, 2007</xref>; <xref ref-type="bibr" rid="btz041-B36">Weischenfeldt <italic>et al.</italic>, 2013</xref>). Consequently, the characterization of SVs is of major importance to human medicine and genetics alike. It can contribute to the early detection of disorders and can help to elucidate their underlying genetic and molecular processes (<xref ref-type="bibr" rid="btz041-B12">Gonzalez-Garay, 2014</xref>). In other organisms such as plants, SVs play an equally important role by driving phenotypic variation and adaptation to different environments (<xref ref-type="bibr" rid="btz041-B29">Saxena <italic>et al.</italic>, 2014</xref>).</p>
<p>Next generation sequencing has enabled the identification of SNPs and small Indels to a high resolution. SVs, however, are much harder to detect. One reason is that SVs encompass a diverse range of modifications. While SNPs are simple base pair substitutions, the term ‘SV’ summarizes many different phenomena. Typically, different classes of SVs are distinguished, such as deletions, inversions and insertions. Definitions for some of these classes vary in the literature. For the purpose of this work, we define six different SV classes which are visualized in <xref ref-type="fig" rid="btz041-F1">Figure 1</xref>: deletions, cut&amp;paste insertions, tandem and interspersed duplications, inversions and novel element insertions. The main drivers behind interspersed duplications in human are mobile element insertions, such as Alu, LINE1 and SVA elements. They duplicate using retrotransposition and in total represent ∼25% of all human SV (<xref ref-type="bibr" rid="btz041-B33">Stewart <italic>et al.</italic>, 2011</xref>; <xref ref-type="bibr" rid="btz041-B35">Sudmant <italic>et al.</italic>, 2015</xref>). DNA transposons, although now inactive in mammals (excepts bats) are active in plants and lower-order animals (<xref ref-type="bibr" rid="btz041-B15">Huang <italic>et al.</italic>, 2012</xref>). They use a cut&amp;paste mechanism to move in the genome and therefore motivated the inclusion of cut&amp;paste insertions as a separate SV class.
</p>
<fig id="btz041-F1" orientation="portrait" position="float">
<label>Fig. 1.</label>
<caption>
<p>Schematic overview of different SV classes. SVs can be categorized into deletions, cut&amp;paste insertions, tandem and interspersed duplications, inversions and novel element insertions. Each SV class is depicted in an individual genome (lower line) when compared to the reference genome (upper line). The region being rearranged is marked in red</p>
</caption>
<graphic xlink:href="btz041f1"></graphic>
</fig>
<p>There exists a wide variety of tools for SV calling from short reads (<xref ref-type="bibr" rid="btz041-B25">Pabinger <italic>et al.</italic>, 2014</xref>) but despite ongoing efforts, the discovery of SVs from short-read data remains challenging (<xref ref-type="bibr" rid="btz041-B11">English <italic>et al.</italic>, 2015</xref>). Studies have estimated that short-read methods suffer from poor sensitivity down to 10% particularly for small SVs shorter than 1 kbp (<xref ref-type="bibr" rid="btz041-B7">Chaisson <italic>et al.</italic>, 2015</xref>; <xref ref-type="bibr" rid="btz041-B17">Huddleston <italic>et al.</italic>, 2016</xref>). In contrast to SNPs where discovery and sequence resolution can be performed simultaneously, SVs are discovered mainly indirectly using short paired-end reads. Their alignments are examined for characteristic signatures, such as inconsistently mapping read pairs, split reads and changes in read depth (<xref ref-type="bibr" rid="btz041-B2">Alkan <italic>et al.</italic>, 2011</xref>). These signatures can only be indirect evidence in favor of certain SV classes but are unable to fully characterize the SV. The main limitation here is that most SVs are simply larger than the short reads. The accurate detection of SVs is, besides their diversity, hampered by their association with repeat regions, biases in the sequencing technology and the additional complexity of diploidy (<xref ref-type="bibr" rid="btz041-B5">Carvalho and Lupski, 2016</xref>; <xref ref-type="bibr" rid="btz041-B16">Huddleston and Eichler, 2016</xref>; <xref ref-type="bibr" rid="btz041-B37">Willems <italic>et al.</italic>, 2014</xref>).</p>
<p>To characterize the full spectrum of human genetic variation, long-read sequencing technologies that generate reads with an average length of tens of kilobases show many advantages. The long reads can be mapped with greater accuracy which enables the sequencing of repetitive and low-complexity regions (<xref ref-type="bibr" rid="btz041-B6">Chaisson and Tesler, 2012</xref>; <xref ref-type="bibr" rid="btz041-B22">Loomis <italic>et al.</italic>, 2013</xref>). Unlike with short reads, SVs are often spanned by a single long read. This enables the direct detection and full characterization of the SVs. Consequently, several studies confirmed that a substantial number of SVs that are missed by short-read approaches can be identified with long reads (<xref ref-type="bibr" rid="btz041-B11">English <italic>et al.</italic>, 2015</xref>; <xref ref-type="bibr" rid="btz041-B17">Huddleston <italic>et al.</italic>, 2016</xref>; <xref ref-type="bibr" rid="btz041-B24">Merker <italic>et al.</italic>, 2018</xref>). Two commercial long-read sequencing solutions exist to date: single-molecule real-time (SMRT) sequencing by Pacific Biosciences (PacBio) and Nanopore sequencing by Oxford Nanopore Technologies (ONT). Both technologies have the same drawbacks: high error rates of ∼5–15% with dominating Indel errors and still high costs compared to short-read sequencing.</p>
<p>Similarly to the detection of SVs from short-read data, the first step toward SV detection from long reads is often the alignment of the reads to a reference genome. Depending on the alignment tool used to produce the alignments, SV detection results can vary substantially as Sedlazeck <italic>et al.</italic> showed for their tool <italic>Sniffles</italic> (<xref ref-type="bibr" rid="btz041-B31">Sedlazeck <italic>et al.</italic>, 2018a</xref>). In that study, SV-spanning long reads were aligned with seven different aligners. Their results showed that one particular aligner, <italic>NGMLR</italic>, outperformed all the others (including <italic>BWA-MEM</italic>, <italic>Minimap2</italic>, <italic>LAST</italic> and <italic>BLASR</italic>) on the task (<xref ref-type="bibr" rid="btz041-B31">Sedlazeck <italic>et al.</italic>, 2018a</xref>). In our study, we analyzed read alignments by <italic>NGMLR</italic> to detect SVs. In the <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref>, however, we include results for <italic>Minimap2</italic> which is an order of magnitude faster than <italic>NGMLR</italic> (<xref ref-type="bibr" rid="btz041-B20">Li, 2018</xref>).</p>
<p>Read alignments alone are not sufficient to detect and characterize SVs. Dedicated SV callers are needed to collect and interpret evidence from the read alignments. Recently, three methods have been developed for calling SVs based on long reads (<xref ref-type="bibr" rid="btz041-B32">Sedlazeck <italic>et al.</italic>, 2018b</xref>). <italic>PBHoney</italic> and <italic>SMRT-SV</italic> are designed specifically for PacBio reads while <italic>Sniffles</italic> supports PacBio and ONT reads (<xref ref-type="bibr" rid="btz041-B10">English <italic>et al.</italic>, 2014</xref>; <xref ref-type="bibr" rid="btz041-B17">Huddleston <italic>et al.</italic>, 2016</xref>; <xref ref-type="bibr" rid="btz041-B31">Sedlazeck <italic>et al.</italic>, 2018a</xref>).</p>
<p>
<italic>PBHoney</italic> comprises two different variant identification approaches (<xref ref-type="bibr" rid="btz041-B10">English <italic>et al.</italic>, 2014</xref>). The first approach, <italic>PBHoney-Spots</italic>, exploits the stochastic nature of the errors in PacBio reads. It scans read alignments (usually produced by the read aligner <italic>BLASR</italic>) and recognizes SVs by an increase in error and a subsequent decrease in error along the reference sequence. The second approach, <italic>PBHoney-Tails</italic>, analyzes the soft-clipped (i.e. unmapped) read tails from a <italic>BLASR</italic> alignment. It extracts such tails from the BLASR output and realigns them to the reference. Then, SVs are detected by clustering the resulting piece-alignments based on their location and orientation.</p>
<p>
<italic>SMRT-SV</italic> scans PacBio alignments for SV signatures, such as spanned deletions, spanned insertions and soft-clipped read tails (<xref ref-type="bibr" rid="btz041-B17">Huddleston <italic>et al.</italic>, 2016</xref>). Clusters of such events are validated with a local <italic>de-novo</italic> assembly of the reads overlapping the locus and subsequent alignment of the assembly to the reference.</p>
<p>
<italic>Sniffles</italic> uses signatures from split-read alignments, high-mismatch regions and coverage analysis to identify SVs (<xref ref-type="bibr" rid="btz041-B31">Sedlazeck <italic>et al.</italic>, 2018a</xref>). To overcome the high error rate in the reads, it evaluates candidate SVs based on features such as their size, position and breakpoint consistency.</p>
<p>All three methods regard SV (i.e. deletions, insertions, inversions) as rearrangements occurring in a single genomic locus. However, SV often involves multiple genomic loci, such as for a mobile element which is reverse-transcribed from a source region and inserted at another location. The higher read lengths of PacBio and ONT reads allow to link both loci much more efficiently and confidently than was possible with short paired-end reads. Nevertheless, existing methods ignore this type of information and are only able to detect the isolated destination location of the mobile element insertion.</p>
<p>In this study, we introduce SVIM, a computational method for the sensitive detection and accurate classification of five different classes of SVs from long-read sequencing data. We describe the three core components of the approach and our methodology for evaluation on simulated and real datasets. Our results demonstrate that SVIM reaches substantially higher recall and precision than existing tools for SV detection from long reads. Unlike other methods, SVIM has been specifically designed to distinguish three separate classes of large insertions: interspersed duplications, tandem duplications and insertions of novel elements. To our knowledge, it is the only tool capable of identifying not only the insertion location of an interspersed duplication but also its potential genomic origin using long reads. We demonstrate this capability on a small number of high-scoring interspersed duplications identified in the NA12878 individual. Furthermore, we compare SV callsets produced by SVIM on reads from PacBio and Nanopore data. Finally, we compare the runtimes of different SV callers including SVIM.</p>
</sec>
<sec>
<title>2 Materials and methods</title>
<p>SVIM implements a pipeline of three consecutive components (see <xref ref-type="fig" rid="btz041-F2">Fig. 2</xref>). First, SV signatures are collected from each individual read in the input Sequence Alignment Map (SAM)/Binary Alignment Map (BAM) file (COLLECT). Secondly, the detected signatures are clustered using a graph-based clustering approach and a novel distance metric for SV signatures (CLUSTER). Thirdly and lastly, multiple SV events are merged and classified into higher-order events (i.e. events involving multiple regions in the genome) such as duplications (COMBINE). The three components are explained in the following.
</p>
<fig id="btz041-F2" orientation="portrait" position="float">
<label>Fig. 2.</label>
<caption>
<p>The SVIM workflow. (1) Signatures for SVs are collected from the input read alignments. SVIM collects them from within alignments (intra-alignment signatures) and between alignments (inter-alignment signatures). (2) Collected signatures are clustered based on their genomic position and span. (3) Signature clusters from different parts of the genome are combined to distinguish five different classes of SVs: deletions, interspersed duplications, novel insertions, inversions and tandem duplications</p>
</caption>
<graphic xlink:href="btz041f2"></graphic>
</fig>
<sec>
<title>2.1 Collection of SV signatures from individual reads</title>
<p>SVIM analyzes read alignments in SAM/BAM format (<xref ref-type="bibr" rid="btz041-B21">Li <italic>et al.</italic>, 2009</xref>) from a read aligner. Modern aligners, such as <italic>NGMLR</italic> and minimap2, try to find good linear alignments of entire reads. Nevertheless, they will split a chimeric read if its different segments can be better aligned separately. Due to these split alignments, the SAM/BAM output from these aligners can contain multiple alignments for each read (one for each aligned read segment). SVIM extracts signatures for SVs from the SAM/BAM file by analyzing one read at a time. We define SV signatures as discordant alignments of a read that point to the presence of one or several possible SVs in the sequenced genome. SVIM searches for two types of signatures:</p>
<p>
<italic>Intra-alignment signatures</italic> are large alignment gaps in the reference or in the read. They can be found in the CIGAR strings of individual SAM/BAM entries.</p>
<p>
<italic>Inter-alignment signatures</italic> are discordant relative alignment positions and orientations of a read’s alignment segments. To illustrate this type of evidence, imagine an inversion that is spanned by a single read. The aligner will split the read into three alignment segments: one segment upstream of the inversion, another segment for the inverted region (INV), and a third segment downstream of the inversion. Due to the inversion, the middle segment will have a different mapping orientation than the other two pieces. This and other types of inter-alignment signatures are detected by SVIM in a heuristic fashion.</p>
<p>This analysis yields six different types of SV signatures: (i) deleted regions (DEL), (ii) inserted regions (INS), (iii) INSs with detected region of origin (DUP), (iv) INVs, (v) tandem duplicated regions (TAN) and (vi) translocation breakpoints (BRK). Some of these evidence types (e.g. INVs) indicate one particular SV class. Others could indicate several possible SV classes. An INS, for instance, can indicate both a duplication or a novel element insertion.</p>
</sec>
<sec>
<title>2.2 Clustering of SV signatures</title>
<p>The collection of signatures from the alignments is only the first step to accurately detect SVs. Subsequently, signatures from multiple reads need to be merged and criteria have to be found to distinguish correct signatures from multiple types of error artifacts (e.g. sequencing error, alignment error). To achieve this, we combine a graph-based clustering approach with a novel distance metric for SV signatures. The aim is to merge signatures of the same SV even if their positions vary slightly due to sequencing or alignment errors. At the same time, signatures from separate SVs need to be kept separate even if the two SVs lie close to each other.</p>
<p>The collected SV signatures can be viewed as quadruples <inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> where <italic>T</italic> is one of the six different signature types defined above, <italic>C</italic> is the chromosome and <italic>B</italic> and <italic>E</italic> are the genomic start (begin) and end positions. One of the few distance metrics defined for such genomic intervals is the Gowda–Diday distance (<xref ref-type="bibr" rid="btz041-B13">Gowda and Diday, 1991</xref>). It combines (i) the distance between two intervals, (ii) their span difference and (c) their degree of overlap into a single numeric distance value. In our type of data (i.e. long-read alignments), however, we often observe little to no overlap between signatures originating from the same SV but from different long reads (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S1</xref>). Nevertheless, signatures from the same SV often possess similar positions and spans.</p>
<p>Therefore, we introduce <italic>span-position distance</italic> as a novel distance metric for SV signatures. For two SV signatures <italic>S</italic><sub>1</sub> and <italic>S</italic><sub>2</sub>, the span-position distance SPD consists of two components SD and PD: <inline-formula id="IE2"><mml:math id="IM2"><mml:mrow><mml:mtext>SPD</mml:mtext><mml:mo>=</mml:mo><mml:mtext>SD</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mtext>PD</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>N</mml:mi></mml:mfrac></mml:mrow></mml:math></inline-formula>. SD is the difference in span between both signatures [normalized to <inline-formula id="IE3"><mml:math id="IM3"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>] and is defined as <inline-formula id="IE4"><mml:math id="IM4"><mml:mrow><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>. PD is the difference in position between both signatures and is defined as <inline-formula id="IE5"><mml:math id="IM5"><mml:mrow><mml:mi mathvariant="italic">min</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mn>2</mml:mn></mml:mfrac><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mn>2</mml:mn></mml:mfrac><mml:mo>|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. <italic>N</italic> is a user-defined normalization constant which regulates the relative importance of SD and PD. In our analyses, setting <italic>N </italic>=<italic> </italic>900 returned the best results. Intuitively, this setting means that two signatures that are 900 bp apart (PD = 900) but have the same span (SD = 0) would have the same SPD as two signatures with extremely different spans (<inline-formula id="IE6"><mml:math id="IM6"><mml:mrow><mml:mtext>SD</mml:mtext><mml:mo>≈</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>) but the same position (PD = 0).</p>
<p>To perform clustering, we follow a graph-based approach similar to the one used by the variant finder <italic>CLEVER</italic> (<xref ref-type="bibr" rid="btz041-B23">Marschall <italic>et al.</italic>, 2012</xref>). Initially, we transform the set of collected SV signatures into an undirected graph. While <italic>CLEVER</italic> identifies nodes with alignments of short paired-end reads, each node in our graph represents an SV signature. We draw an edge between two nodes (i.e. signatures) if the span-position distance between the two signatures is smaller than a user-defined threshold <italic>T</italic>. Systematic evaluation of different settings for this parameter yielded <italic>T </italic>=<italic> </italic>0.7 as an optimal setting for our simulated human datasets (data not shown). An edge between two nodes expresses our confidence that the two signatures represented by the nodes express the same SV allele. From the graph, we produce signature clusters by extracting maximal cliques with an efficient implementation of the Bron–Kerbosch algorithm (<xref ref-type="bibr" rid="btz041-B4">Bron and Kerbosch, 1973</xref>; <xref ref-type="bibr" rid="btz041-B14">Hagberg <italic>et al.</italic>, 2008</xref>). As a consequence, each signature cluster is a maximal group of SV signatures that can be jointly assumed to express the same SV in the donor genome.</p>
<p>Finally, SVIM computes a score for each cluster based on four features:
<list list-type="order"><list-item><p>The number <inline-formula id="IE7"><mml:math id="IM7"><mml:mrow><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>40</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> of signatures in the cluster where at most 20 of each class (intra-alignment or inter-alignment) are taken into account.</p></list-item><list-item><p>An additional bonus <inline-formula id="IE8"><mml:math id="IM8"><mml:mrow><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>30</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> for the existence of at least one signature from each of the two classes. One or more intra-alignment signatures earn a bonus of 10 while one or more inter-alignment signatures earn an additional bonus of 20.</p></list-item><list-item><p>A score <inline-formula id="IE9"><mml:math id="IM9"><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>10</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> based on the standard deviation <italic>s</italic><sub>pos</sub> of the genomic positions of the signatures in the cluster normalized by their average span. <inline-formula id="IE10"><mml:math id="IM10"><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi mathvariant="normal">p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>10</mml:mn><mml:mo>*</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="italic">min</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mtext>pos</mml:mtext></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi mathvariant="italic">span</mml:mi></mml:mrow><mml:mo stretchy="true">¯</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></list-item><list-item><p>A score <inline-formula id="IE11"><mml:math id="IM11"><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi>s</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>20</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> based on the standard deviation <italic>s</italic><sub>span</sub> of the genomic spans of the signatures in the cluster normalized by their average span. <inline-formula id="IE12"><mml:math id="IM12"><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mi mathvariant="normal">s</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>20</mml:mn><mml:mo>*</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi mathvariant="italic">min</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mtext>span</mml:mtext></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi mathvariant="italic">span</mml:mi></mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></list-item></list></p>
<p>By summing up these four components we obtain a score <inline-formula id="IE13"><mml:math id="IM13"><mml:mrow><mml:mi>S</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>100</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> to discern trustworthy signature clusters from artifacts, such as sequencing or alignment artifacts. Trustworthy events are characterized by many intra- and inter-alignment signatures that exhibit high concordance regarding their genomic position and span.</p>
</sec>
<sec>
<title>2.3 Combination and classification of SVs into five SV classes</title>
<p>The third component in the workflow analyzes and combines the SV signature clusters to classify events into five SV classes: deletions, inversions, novel element insertions, tandem duplicaitons and interspersed duplications. Because the confident distinction of interspersed duplications and cut&amp;paste insertions solely based on sequencing reads is impossible, we classify both as interspersed duplications. Nevertheless, we annotate duplications where the region of origin seems to be deleted in the sequenced individual (i.e. a deletion overlaps the genomic origin) as potential cut&amp;paste insertions. While INV, DEL and TAN signature clusters can be directly reported as inversions, deletions and tandem duplications, respectively, the other three signature classes (INS, DUP and BRK) are more complex. The reason is that interspersed duplications are not characterized by only one genomic region but two—a genomic origin and a genomic destination. To capture and classify these higher-order events, SVIM needs to combine multiple signature clusters and therefore makes the following distinctions (see also <xref ref-type="fig" rid="btz041-F3">Fig. 3</xref>):
</p>
<fig id="btz041-F3" orientation="portrait" position="float">
<label>Fig. 3.</label>
<caption>
<p>Read signatures for an interspersed duplication and a novel element insertion. A genomic segment (yellow arrow) has been copied from locus 1 to locus 2a in an individual genome. Additionally, a novel genomic segment (gray arrow) has been inserted in locus 2b. Two reads are generated from the individual (top) and mapped to the reference genome (bottom). The first read (blue-yellow) consists of three segments. They are mapped individually to the reference genome. The two blue segments are mapped to locus 2a exhibiting an insertion signature. The yellow segment is mapped to locus 1 indicating the origin of the insertion. The second read (orange-gray) exhibits a similar insertion signature at locus 2b but as the inserted gray segment is unmapped its origin cannot be determined</p>
</caption>
<graphic xlink:href="btz041f3"></graphic>
</fig>
<list list-type="bullet">
<list-item>
<p>DUP signature clusters are called as interspersed duplications. If the genomic origin overlaps a deletion call, the duplication is marked as potential cut&amp;paste insertion.</p>
</list-item>
<list-item>
<p>INS signature clusters that are close to matching BRK are called as interspersed duplications. If the genomic origin (as defined by the BRK) overlaps a deletion call, the duplication is marked as potential cut&amp;paste insertion.</p>
</list-item>
<list-item>
<p>The remaining INS signature clusters are called as novel element insertions.</p>
</list-item>
</list>
</sec>
<sec>
<title>2.4 Implementation and usage</title>
<p>SVIM has been implemented in Python and is available at github.com/eldariont/svim. It can be easily installed via bioconda or the Python Package Index. As input, SVIM expects either raw reads (in FASTA or FASTQ format) and a reference genome (in FASTA format) or already aligned reads in BAM format. It outputs detected SVs in five separate BED files (one for deletions, interspersed and tandem duplications, inversions and novel insertions, respectively). Additionally, a VCF file with all SV results is produced.</p>
</sec>
<sec>
<title>2.5 Evaluation methodology</title>
<p>In this study, we compared our tool, SVIM (v0.4.1), to three other SV detection methods: <italic>PBHoney-Spots</italic>, <italic>PBHoney-Tails</italic> (both PBSuite v15.8.24) and <italic>Sniffles</italic> (v1.0.8). All three tools are designed for the application on long-read sequencing data. For <italic>Sniffles</italic> and SVIM, reads were aligned with <italic>NGMLR</italic> (v0.2.7) or <italic>minimap2</italic> (v2.12-r836-dirty). For <italic>PBHoney</italic>, reads were aligned with <italic>BLASR</italic> (v5.3.4323a52). We did not compare against short-read SV callers because they have been shown to exhibit lower recall than methods relying on long reads (<xref ref-type="bibr" rid="btz041-B7">Chaisson <italic>et al.</italic>, 2015</xref>; <xref ref-type="bibr" rid="btz041-B17">Huddleston <italic>et al.</italic>, 2016</xref>; <xref ref-type="bibr" rid="btz041-B31">Sedlazeck <italic>et al.</italic>, 2018a</xref>). We also did not compare against <italic>SMRT-SV</italic> because it is not a stand-alone tool but a software pipeline applying several alignment, detection and assembly steps with various other tools. It detects only three SV classes and is computationally more demanding than pure alignment-based tools.</p>
<p>We evaluated all tools on two types of data. Firstly, we generated a simulated genome from which we sampled <italic>in-silico</italic> PacBio sequencing reads with known SVs. This provided us with a complete set of fully characterized SVs for evaluation. Secondly, we used publicly available sequencing reads from PacBio and Nanopore sequencers. We compared the precision and recall of the three methods. Precision is defined as the fraction of detected SVs that are correct (requiring 50% reciprocal overlap between detected and correct SVs). Recall is defined as the fraction of correct SVs that have been detected (with 50% reciprocal overlap). Results for a more lenient and a more stringent overlap requirement of 1 and 90%, respectively, can be found in the <xref ref-type="supplementary-material" rid="sup1">Supplementary Material</xref>. Both precision and recall require a suitable gold standard set of high-confidence SVs for the given genome (i.e. a set of correct SVs).</p>
<p>As expected, recall and precision reached by the different tools depend heavily on tool parameters, particularly score or support thresholds. More relaxed thresholds (i.e. yielding more SVs) increase recall but decrease precision while stricter cutoffs achieve the opposite. Consequently, we ran all four tools with different settings of their most important parameter: For SVIM we applied different score cutoffs (0–100). <italic>Sniffles</italic> was run with different settings of the <italic>min_support</italic> parameter (1–60). For <italic>PBHoney-Spots</italic>, we varied the <italic>minErrReads</italic> parameter and for <italic>PBHoney-Tails</italic> we varied the <italic>minBreads</italic> parameter (both 1–60). We visualized the performance of the tools by plotting each parameter setting as a distinct point in <xref ref-type="fig" rid="btz041-F4">Figures 4–6</xref>. Besides that one parameter, we used the default settings for all other tool parameters except PBHoney Spots’ <italic>spanMax</italic> parameter which we set to 100 000 (100 kb).
</p>
<fig id="btz041-F4" orientation="portrait" position="float">
<label>Fig. 4.</label>
<caption>
<p>Comparison of SV detection performance on a 6× coverage homozygous simulated dataset. SVIM consistently yielded better recall (<italic>x</italic>-axis) and precision (<italic>y</italic>-axis) than the other tools for the recovery of INSs and tandem duplications. For the recovery of deletions and inversions, <italic>Sniffles</italic> reached the same recall as SVIM. The different points for each tool represent multiple settings of the tools’ most important parameters (see Section 2.5). <italic>PBHoney-Spots</italic> only detects deletions and INSs and <italic>PBHoney-Tails</italic> does not detect duplications. Recall and precision were calculated using a required reciprocal overlap of 50% between variant calls and the original simulated variants</p>
</caption>
<graphic xlink:href="btz041f4"></graphic>
</fig>
<fig id="btz041-F5" orientation="portrait" position="float">
<label>Fig. 5.</label>
<caption>
<p>Comparison of recall on a 53× coverage public PacBio dataset and a 6× coverage subset with 2676 high-confidence deletion and 68 insertion calls. For each tool and different thresholds, the number of SV calls with score above the threshold (log-scale) is plotted against the recall. The upper and lower panels show performance on the full dataset and a randomly sampled 6× coverage subset of the data, respectively. SVIM reached the same recall with fewer calls than other tools. The vertical dotted lines denote the average number of deletions and insertions to expect in an individual as recently reported using a <italic>de-novo</italic> assembly approach (<xref ref-type="bibr" rid="btz041-B8">Chaisson <italic>et al.</italic>, 2018</xref>). Recall was calculated using a required reciprocal overlap of 50% (deletion calls) and 1% (insertion calls), respectively, between variant calls and the gold standard variants</p>
</caption>
<graphic xlink:href="btz041f5"></graphic>
</fig>
<fig id="btz041-F6" orientation="portrait" position="float">
<label>Fig. 6.</label>
<caption>
<p>Comparison of recall from NA12878 reads aligned to an altered reference genome. For each tool and different thresholds, the number of SV calls with score above the threshold (log-scale) is plotted against the recall. The upper and lower panels show performance on the full dataset and a randomly sampled 6× coverage subset of the data, respectively. In all six panels, SVIM outperformed all the other tools and reached substantially higher recall for similar numbers of calls. The improvement was most prominent for insertions. Recall was calculated using a required reciprocal overlap of 50% between variant calls and the original implanted variants</p>
</caption>
<graphic xlink:href="btz041f6"></graphic>
</fig>
<sec>
<title>2.5.1 Simulated data</title>
<p>We simulated 600 homozygous SVs by altering the sequence of chromosomes 21 and 22 in the hg19 reference genome. More precisely, we implanted 200 deletions, 100 inversions, 100 tandem duplications and 200 interspersed duplications with the R package <italic>RSVSim</italic> (<xref ref-type="bibr" rid="btz041-B3">Bartenhagen and Dugas, 2013</xref>). The package estimates the distribution of SV sizes from real datasets and simulates the association of SVs to various kinds of repeats. The resulting genome contained SVs between 50 bp and 10 kbp in size. Subsequently, reads were simulated from this genome to generate 10 different datasets with coverages between 6 and 60× with the tool <italic>SimLoRD</italic> (<xref ref-type="bibr" rid="btz041-B34">Stöcker <italic>et al.</italic>, 2016</xref>). <italic>SimLoRD</italic> imitates the error model of SMRT reads to simulate realistic PacBio reads.</p>
<p>To simulate heterozygous SVs, we adapted the previously described approach only slightly. Instead of sampling all reads from the altered reference genome, half of the reads were sampled from the original reference genome. Consequently, reads from the original (wild-type) reference genome and the altered genome each amounted to 50% of the total coverage.</p>
<p>The comparison between different tools was complicated by the fact that each tool is designed to detect different SV classes. <italic>PBHoney</italic> is able to detect deletions, INSs, inversions and BRKs. <italic>Sniffles</italic> is additionally capable of identifying tandem duplications and complex events. Because only SVIM distinguishes between duplications and novel element insertions, we compared the tools on four common basic SV classes in the simulated datasets: deletions, INSs (i.e. inserted sequence from duplications and novel element insertions), inversions and tandem duplications. Because <italic>Sniffles</italic> tends to call intra-chromosomal duplications as very large deletions or inversions (see github.com/fritzsedlazeck/Sniffles/issues/23), we omitted deletion and inversion calls by <italic>Sniffles</italic> that were larger than 100 kbp to ensure a fair comparison. To obtain calls of INSs from SVIM, we use the union of its interspersed duplication and novel element insertion calls.</p>
</sec>
<sec>
<title>2.5.2 Real data</title>
<p>Simulation cannot reflect all aspects of biological data. Therefore, we used real PacBio and Nanopore data for the second part of our analysis. This part consisted of three separate experiments. For the first two, we utilized a real 53× coverage dataset of the NA12878 individual from a PacBio RS II machine (Genome in a Bottle consortium; Accession SRR3197748) (<xref ref-type="bibr" rid="btz041-B38">Zook <italic>et al.</italic>, 2014</xref>). To assess the influence of sequencing coverage on SV detection performance, we produced a corresponding low-coverage subset of the dataset by sampling reads randomly to 6× coverage. With these two PacBio datasets, we performed two separate analyses. Firstly, we evaluated our method with a published benchmark sample of 2676 high-confidence deletions and 68 high-confidence insertions (<xref ref-type="bibr" rid="btz041-B26">Parikh <italic>et al.</italic>, 2016</xref>). Secondly, we implanted SVs into the reference genome and aligned the PacBio reads to this altered reference. Implanting an SV into the reference genome causes the original reads to contain the inverse of the SV that was implanted. With this approach, three types of SVs were simulated: (i) 200 deletions were simulated by inserting sequence into the reference genome; (ii) 100 inversions were simulated by inverting regions in the reference and (iii) 200 insertions were simulated by deleting regions in the reference. Unfortunately, duplications could not be simulated because this would have required the identification and alteration of existing duplications in the reference genome.</p>
<p>In a third experiment, we compared the 53× coverage PacBio dataset of the NA12878 individual with a 26× coverage Nanopore dataset of the same individual (<xref ref-type="bibr" rid="btz041-B19">Jain <italic>et al.</italic>, 2018</xref>, release 5). We evaluated our method with the high-confidence callset described above and analyzed the overlap between the three callsets (PacBio, Nanopore and high-confidence callset).</p>
<p>The NA12878 datasets are more realistic than the simulated dataset but impose the limitation that there exists no complete gold standard set of SVs. As a consequence of using an incomplete gold standard for evaluation, precision could not be accurately measured. Putative ‘false positives’ could have been true but simply not contained in the incomplete gold standard. Therefore, we compared the tools only based on their recall in relation to the number of calls.</p>
</sec>
</sec>
</sec>
<sec>
<title>3 Results</title>
<sec>
<title>3.1 Evaluation with simulated reads</title>
<p>As described in the Section 2, we implanted SVs from four different classes into a reference genome. Reads sampled from this synthetic genome were then analyzed with SVIM, <italic>PBHoney-Tails</italic>, <italic>PBHoney-Spots</italic> and <italic>Sniffles</italic>. Results for the 6× coverage homozygous dataset can be found in <xref ref-type="fig" rid="btz041-F4">Figure 4</xref>. For a comparison of results across all coverages from 6 to 60× see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S2</xref>.</p>
<p>Regardless of coverage, SVIM achieved substantially better results than all other tools in the recovery of INSs and tandem duplications. With 6× coverage and homozygous SVs, SVIM reached average precisions (AP) of 86% (INSs), and 83% (tandem duplications) for the two classes while the second best tools, <italic>PBHoney-Spots</italic> and <italic>Sniffles</italic> respectively, reached 25 and 54%. In the recovery of deletions and inversions, SVIM and <italic>Sniffles</italic> reached equal results with AP of 94% (deletions) and 90% (inversions), respectively. In our experiments, <italic>PBHoney-Tails</italic> performed very poorly across all settings. It did detect only very few INSs, suffered from very low recall for inversions and poor precision for deletions. All these trends remain true for higher coverages as well (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S2</xref>).</p>
<p>The simulated heterozygous dataset yielded similar results to those of the homozygous dataset (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S5</xref>). While all tools reached slightly lower precision and recall, SVIM still outperformed the others for INSs (AP = 68% for 6× coverage) and tandem duplications (AP = 76%). In the detection of deletions and inversions, however, <italic>Sniffles</italic> and SVIM reached nearly equal results (AP = 90% and AP = 87%, respectively).</p>
<p>We explored whether more lenient (1%) or stringent (90%) overlap requirements for the calls would change the results (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figs S3, S4, S6 and S7</xref>). As it turned out, the overlap requirement had little effect on <italic>Sniffles</italic> and SVIM. Only <italic>PBHoney-Spots</italic> produced substantially worse results for more stringent overlap requirements suggesting that the tool has trouble finding accurate SV breakpoints.</p>
<p>To measure the influence of the input read alignments on SV calling, we also compared results for two long-read aligners, <italic>NGMLR</italic> and <italic>minimap2</italic> (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Figs S8 and S9</xref>). The results indicate that SVIM is relatively robust to the choice of the aligner but benefits slightly from the more accurate alignment of reads covering insertions and tandem duplications by <italic>NGMLR</italic>. <italic>Sniffles</italic>, however, reaches considerably higher recall for insertions when analyzing alignments by <italic>minimap2</italic> compared to <italic>NGMLR</italic>. Visual inspection of the alignments revealed a difference in the way that reads covering insertions are aligned. While <italic>minimap2</italic> expresses insertions mainly as long reference gaps in the CIGAR string, <italic>NGMLR</italic> tends to split reads at insertions. Because <italic>Sniffles</italic> does not call insertions of sequence existing somewhere else in the genome (i.e. interspersed duplications) from split alignments, it reaches higher recall with <italic>minimap2</italic>.</p>
</sec>
<sec>
<title>3.2 Evaluation with real reads and high-confidence calls</title>
<p>While simulated datasets enable the comprehensive comparison of tools in a controlled and precise manner, they cannot reflect the full complexity of real sequencing data. Therefore, we analyzed a publicly available 53× coverage dataset of a human individual from a PacBio RS II machine and a random 6× coverage subset (see Section 2). To evaluate the detection performance of our tool, we first used a published benchmark set of 2676 high-confidence deletions and 68 high-confidence insertions.</p>
<p>Among all tools, SVIM was the most consistent across the different settings (see <xref ref-type="fig" rid="btz041-F5">Fig. 5</xref>). It recovered substantially more deletions from the high-confidence call set than the other tools with the same number of SV calls. To reach a recall of more than 50%, SVIM needed 1932/2577 calls (53×/6× coverage) while <italic>Sniffles</italic> needed 4320/6333 calls. <italic>PBHoney-Spots</italic> needed even 5062 calls (53× coverage) and <italic>PBHoney-Tails</italic> did not reach this level of recall at all. A recent study by the Human Genome Structural Variation Consortium (HGSVC) used a multi-platform <italic>de-novo</italic> assembly approach for SV detection and found an average of 12 680 deletions per individual (<xref ref-type="bibr" rid="btz041-B8">Chaisson <italic>et al.</italic>, 2018</xref>). When we select tool thresholds closest to this mark, SVIM, <italic>Sniffles</italic>, <italic>PBHoney-Spots</italic> and <italic>PBHoney-Tails</italic> recover 97, 97, 80 and 46% of the high-confidence deletions from the full coverage dataset, respectively. All tools miss high-confidence calls across the entire size range (50 bp–140 kb). But while the false negatives of the first three tools are evenly distributed across the size spectrum, <italic>PBHoney-Tails</italic> particularly misses small events. For instance, it misses all high-confidence calls smaller than 100 bp and 69% of calls between 100 and 500 bp but only 24% of calls between 500 bp and 1 kb.</p>
<p>Although the results for insertions need to be considered with greater caution due to the small size (<italic>n</italic> = 68) of the high-confidence call set, SVIM reached a higher recall than all other tools for small numbers of calls. When we again select tool thresholds closest to the estimate of 18 919 insertions per individual from the HGSVC study (<xref ref-type="bibr" rid="btz041-B8">Chaisson <italic>et al.</italic>, 2018</xref>), SVIM, <italic>Sniffles</italic>, <italic>PBHoney-Spots</italic> and <italic>PBHoney-Tails</italic> recover 66, 72, 62 and 3% of high-confidence insertions from the full coverage dataset, respectively. Again, all tools miss high-confidence calls across the entire size range of the callset (12–379 bp).</p>
</sec>
<sec>
<title>3.3 Evaluation with real reads and an altered reference genome</title>
<p>As described in the Section 2, we obtained another reliable gold standard set of SVs (deletions, inversions, insertions) by implanting SVs into the reference genome and aligning the PacBio reads (53 and 6× coverage) to this altered reference. We evaluated all combinations of the three SV types and the two coverages. SVIM outperformed the other tools (see <xref ref-type="fig" rid="btz041-F6">Fig. 6</xref>) in all six of these settings. In the recovery of deletions and inversions, SVIM reached a substantially higher recall than <italic>PBHoney</italic>. It also needed fewer SV calls to reach similar recall than <italic>Sniffles</italic> while the difference decreased for higher recall. The most striking difference was observed for the detection of insertions. While SVIM reached a recall of 84 and 43% with 20 000 calls (53 and 6× coverage, respectively), <italic>PBHoney-Spots</italic> reached 61 and 25% and <italic>Sniffles</italic> detected only 57 and 29% with the same number of calls. For full coverage, SVIM needed 2480 calls to reach a recall of 50% while <italic>Sniffles</italic> and <italic>PBHoney-Spots</italic> needed both more than 10 000 calls.</p>
</sec>
<sec>
<title>3.4 Interspersed duplications in NA12878</title>
<p>SVIM’s ability to link the genomic origin and destination of an interspersed duplication can yield interesting insights into the dynamics of genomic rearrangements. Our analysis of the NA12878 PacBio dataset with SVIM identified 27 high-confidence interspersed duplications with a score &gt;30 (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S1</xref>). The genomic origin of 19 of them overlapped annotated retrotransposons. Among those, 10 and 2 represented complete and incomplete Alu insertions, respectively; 2 and 2 represented insertions of complete and incomplete LINE1 elements, respectively; 2 represented complete SVA elements and another one represented human endogenous retrovirus HERVK14. Strikingly, six duplications occurred from regions of the genome without annotated repeat elements indicating other formation mechanisms. Finally, we observed two duplications in the untranslated regions of three genes, BAZ2A, RBMS2 and PCMTD1.</p>
</sec>
<sec>
<title>3.5 Comparison of PacBio and Nanopore sequencing data</title>
<p>SVIM can detect SVs from both PacBio and Nanopore data. An evaluation with real reads and high-confidence calls demonstrated that SVIM’s performance on a 26× coverage Nanopore dataset is comparable to its performance on the 53× coverage PacBio dataset (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S14</xref>). When we compared both SVIM callsets with the high-confidence callset, we found that all three callsets together yielded a total of 45 729 SVs (score cutoff of 40; see <xref ref-type="fig" rid="btz041-F7">Fig. 7</xref>). A total of 22 461 or 49% of the calls were unique to one of the callsets with 13 <bold> </bold>385 and 9017 SVs detected exclusively from the PacBio and Nanopore reads, respectively. However, 23 248 or 51% of the calls were made on both PacBio and Nanopore reads. It is reassuring that the vast majority (97%) of high-confidence calls were detected by both sequencing technologies.
</p>
<fig id="btz041-F7" orientation="portrait" position="float">
<label>Fig. 7.</label>
<caption>
<p>Venn diagram of three SV callsets for NA12878: SVIM calls on a 53× coverage PacBio dataset, SVIM calls on a 26× coverage Nanopore dataset and high-confidence calls from <xref ref-type="bibr" rid="btz041-B26">Parikh <italic>et al.</italic> (2016)</xref>. Callsets were produced by merging SVIM calls with a score <inline-formula id="IE14"><mml:math id="IM14"><mml:mrow><mml:mo>≥</mml:mo><mml:mn>40</mml:mn></mml:mrow></mml:math></inline-formula> for deletions, interspersed duplications and novel element insertions. Subsequently, the diagram was generated using <italic>pybedtools</italic> (<xref ref-type="bibr" rid="btz041-B9">Dale <italic>et al.</italic>, 2011</xref>) and <italic>matplotlib_venn</italic></p>
</caption>
<graphic xlink:href="btz041f7"></graphic>
</fig>
<p>PacBio and Nanopore sequencing exhibit similar error rates but slightly different error modes. While PacBio produces more insertion than deletion errors (<xref ref-type="bibr" rid="btz041-B28">Ross <italic>et al.</italic>, 2013</xref>), Nanopore shows the opposite tendency (<xref ref-type="bibr" rid="btz041-B18">Jain <italic>et al.</italic>, 2015</xref>). In concordance to these biases, SVIM detected 17 292 deletions from the Nanopore reads but only 12 782 deletions from the PacBio data (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S15</xref>). Conversely, it detected 23 858 insertions from PacBio but only 14 986 insertions from Nanopore data (see <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S16</xref>). Consequently, the majority of PacBio-only calls were insertions (90%) and the majority of Nanopore-only calls were deletions (65%). We could confirm the finding by Sedlazeck <italic>et al.</italic> that a large fraction (80%) of Nanopore-only calls lay in simple tandem repeats in contrast to only 35% of Pacbio-only calls (<xref ref-type="bibr" rid="btz041-B31">Sedlazeck <italic>et al.</italic>, 2018a</xref>).</p>
</sec>
<sec>
<title>3.6 Runtime evaluation</title>
<p>We compared the runtimes of <italic>PBHoney-Spots</italic>, <italic>PBHoney-Tails</italic>, <italic>Sniffles</italic> and SVIM on the same NA12878 dataset (53× coverage). <italic>Sniffles</italic> and SVIM were given input alignments produced by <italic>NGMLR</italic> while <italic>PBHoney-Spots</italic> and <italic>PBHoney-Tails</italic> were given <italic>BLASR</italic> alignments. The runtime was measured on an AMD EPYC 7601 (128 cores, 2.7 GHz, 1 TB memory). Only the runtime of SV detection was measured, excluding the time required for producing the alignments. All four tools analyzed the entire dataset in under 3 h (see <xref ref-type="table" rid="btz041-T1">Table 1</xref>). <italic>PBHoney-Tails</italic>, <italic>Sniffles</italic> and SVIM use only a single core and took 57 160, and 156 min, respectively. <italic>PBHoney-Spots</italic> is the only tool benefiting from multiple cores and took 145 min on 4 cores (608 min on only 1 core).</p>
<table-wrap id="btz041-T1" orientation="portrait" position="float">
<label>Table 1.</label>
<caption>
<p>Runtime comparison on the 53× coverage NA12878 PacBio dataset</p>
</caption>
<table frame="hsides" rules="groups">
<colgroup span="1">
<col align="left" span="1" valign="top"/>
<col align="char" char="." span="1" valign="top"/>
<col align="char" char="." span="1" valign="top"/>
<col align="char" char="." span="1" valign="top"/>
</colgroup>
<thead>
<tr>
<th colspan="1" rowspan="1">Tool</th>
<th colspan="1" rowspan="1">Threads</th>
<th colspan="1" rowspan="1">CPU time (min)</th>
<th colspan="1" rowspan="1">Wall clock time (min)</th>
</tr>
</thead>
<tbody>
<tr>
<td colspan="1" rowspan="1">PBHoney-Spots</td>
<td colspan="1" rowspan="1">1</td>
<td colspan="1" rowspan="1">601</td>
<td colspan="1" rowspan="1">608</td>
</tr>
<tr>
<td colspan="1" rowspan="1">PBHoney-Spots</td>
<td colspan="1" rowspan="1">2</td>
<td colspan="1" rowspan="1">561</td>
<td colspan="1" rowspan="1">284</td>
</tr>
<tr>
<td colspan="1" rowspan="1">PBHoney-Spots</td>
<td colspan="1" rowspan="1">4</td>
<td colspan="1" rowspan="1">558</td>
<td colspan="1" rowspan="1">145</td>
</tr>
<tr>
<td colspan="1" rowspan="1">PBHoney-Tails</td>
<td colspan="1" rowspan="1">1</td>
<td colspan="1" rowspan="1">56</td>
<td colspan="1" rowspan="1">57</td>
</tr>
<tr>
<td colspan="1" rowspan="1">Sniffles</td>
<td colspan="1" rowspan="1">1</td>
<td colspan="1" rowspan="1">159</td>
<td colspan="1" rowspan="1">160</td>
</tr>
<tr>
<td colspan="1" rowspan="1">SVIM</td>
<td colspan="1" rowspan="1">1</td>
<td colspan="1" rowspan="1">155</td>
<td colspan="1" rowspan="1">156</td>
</tr>
</tbody>
</table>
<table-wrap-foot>
<fn id="tblfn1">
<p>
<italic>Note</italic>: Only the runtime of each tool is measured excluding the prior read alignment.</p>
</fn>
</table-wrap-foot>
</table-wrap>
</sec>
</sec>
<sec>
<title>4 Discussion</title>
<p>SV is, besides single-nucleotide variation and small Indels, one of the main classes of genetic variation. The influence of SVs on human phenotype and disease makes them an important research target but their unique properties complicate their detection and characterization. Particularly SV detection methods using short-read technology suffer from low sensitivity. Long-read sequencing technologies such as PacBio SMRT sequencing and ONT Nanopore sequencing have the potential to alleviate these problems. In this study, we introduced the novel SV detection method SVIM. It employs a three-step pipeline to collect, cluster and combine SV signatures from long reads.</p>
<p>A comparison of SVIM with three competing tools on simulated and real data demonstrated that our method combines high sensitivity with high precision. Across all tools, deletions were the easiest to detect. Consequently, Sniffles and SVIM reached almost perfect precision and recall on the simulated data. On the real datasets, both tools still reached a recall of over 90% when setting thresholds using the HGSVC estimate of 12 680 deletions per individual (<xref ref-type="bibr" rid="btz041-B8">Chaisson <italic>et al.</italic>, 2018</xref>). This level of recall was maintained regardless of sequencing technology and evaluation method (high-confidence callset or altered reference). SVIM generally required fewer calls to reach the same recall as the other tools indicating that the best-scoring SVIM calls are more enriched in true variants than the other tools’ callsets of similar size. For the identification of inversions, <italic>Sniffles</italic> and SVIM exhibited equally strong performance although SVIM showed a slightly higher recall in the evaluation with an altered reference. It needs to be noted, however, that the evaluation of inversions had to rely fully on simulation due to the lack of a suitable gold standard set.</p>
<p>Differences between SVIM and the other tools were most prominent for INSs (i.e. interspersed duplications and novel element insertions). Across all simulations and real data evaluations, SVIM outperformed the other tools by a wide margin. The difference to <italic>Sniffles</italic> can be largely explained by their approach of analyzing split alignments. From such alignments, <italic>Sniffles</italic> only calls insertions of novel elements but does not detect insertions of sequence existing somewhere else in the genome (e.g. from mobile elements). The detection performance of tandem duplications could only be evaluated in the simulated dataset again due to the lack of a gold standard. What we observed is a big difference in precision between SVIM and <italic>Sniffles</italic> due to a large number of erroneous duplication calls by Sniffles.</p>
<p>What sets SVIM apart from existing SV callers is not only its improved detection performance but also its ability to distinguish three different classes of insertions purely based on alignment information. SVIM enables researchers to determine whether an insertion event is due to a tandem duplication, an interspersed duplication or the insertion of a novel element. Moreover, SVIM identifies the genomic origin of duplications which facilitates their functional annotation, e.g. into different classes of mobile elements.</p>
<p>Because SVIM, similar to other SV callers, analyzes read alignments it depends on the correctness of these alignments and inherits the limitations of the used read alignment method. One of these limitations originates from the repetitive nature of many genomes which keeps repetitive read segments from being mapped confidently. This can affect SVIM’s sensitivity but might also cause SVIM to classify an interspersed duplication as a novel insertion if the inserted segment cannot be uniquely mapped. This might particularly affect mobile element insertions whose individual copies are highly similar. Currently, SVIM is unable to detect chromosomal translocations and nested structural variants. We intend to add this functionality in the future. Additionally, we plan to implement genotyping capabilities for the detected variants in an upcoming release of SVIM.</p>
</sec>
<sec sec-type="supplementary-material">
<title>Supplementary Material</title>
<supplementary-material content-type="local-data" id="sup1">
<label>btz041_Supplementary_Materials</label>
<media xlink:href="btz041_supplementary_materials.zip">
<caption>
<p>Click here for additional data file.</p>
</caption>
</media>
</supplementary-material>
</sec>
</body>
<back>
<ack id="ack1">
<title>Acknowledgements</title>
<p>The authors wish to thank Giuseppe Gallone, M-Hossein Moeinzadeh, Rosario Piro and Knut Reinert for helpful discussions.</p>
<sec>
<title>Funding</title>
<p>This work was supported by the International Max Planck Research School for Computational Biology and Scientific Computing doctoral program.</p>
<p>
<italic>Conflict of Interest</italic>: none declared.</p>
</sec>
</ack>
<ref-list id="ref1">
<title>References</title>
<ref id="btz041-B1">
<mixed-citation publication-type="journal">1000 Genomes Project Consortium. (<year>2015</year>) 
<article-title>A global reference for human genetic variation</article-title>. <source/>Nature, <volume>526</volume>, <fpage>68</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">26432245</pub-id></mixed-citation>
</ref>
<ref id="btz041-B2">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Alkan</surname><given-names>C.</given-names></name></person-group>
<etal>et al</etal> (<year>2011</year>) 
<article-title>Genome structural variation discovery and genotyping</article-title>. <source/>Nat. Rev. Genet., <volume>12</volume>, <fpage>363</fpage>–<lpage>376</lpage>.<pub-id pub-id-type="pmid">21358748</pub-id></mixed-citation>
</ref>
<ref id="btz041-B3">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Bartenhagen</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Dugas</surname><given-names>M.</given-names></name></person-group> (<year>2013</year>) 
<article-title>Rsvsim: an R/Bioconductor package for the simulation of structural variations</article-title>. <source/>Bioinformatics, <volume>29</volume>, <fpage>1679</fpage>–<lpage>1681</lpage>.<pub-id pub-id-type="pmid">23620362</pub-id></mixed-citation>
</ref>
<ref id="btz041-B4">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Bron</surname><given-names>C.</given-names></name>, <name name-style="western"><surname>Kerbosch</surname><given-names>J.</given-names></name></person-group> (<year>1973</year>) 
<article-title>Algorithm 457: finding all cliques of an undirected graph</article-title>. <source/>Commun. ACM, <volume>16</volume>, <fpage>575</fpage>–<lpage>577</lpage>.</mixed-citation>
</ref>
<ref id="btz041-B5">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Carvalho</surname><given-names>C.M.</given-names></name>, <name name-style="western"><surname>Lupski</surname><given-names>J.R.</given-names></name></person-group> (<year>2016</year>) 
<article-title>Mechanisms underlying structural variant formation in genomic disorders</article-title>. <source/>Nat. Rev. Genet., <volume>17</volume>, <fpage>224</fpage>–<lpage>238</lpage>.<pub-id pub-id-type="pmid">26924765</pub-id></mixed-citation>
</ref>
<ref id="btz041-B6">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Chaisson</surname><given-names>M.J.</given-names></name>, <name name-style="western"><surname>Tesler</surname><given-names>G.</given-names></name></person-group> (<year>2012</year>) 
<article-title>Mapping single molecule sequencing reads using basic local alignment with successive refinement (BLASR): application and theory</article-title>. <source/>BMC Bioinformatics, <volume>13</volume>, <fpage>238.</fpage><pub-id pub-id-type="pmid">22988817</pub-id></mixed-citation>
</ref>
<ref id="btz041-B7">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Chaisson</surname><given-names>M.J.</given-names></name></person-group>
<etal>et al</etal> (<year>2015</year>) 
<article-title>Resolving the complexity of the human genome using single-molecule sequencing</article-title>. <source/>Nature, <volume>517</volume>, <fpage>608</fpage>–<lpage>611</lpage>.<pub-id pub-id-type="pmid">25383537</pub-id></mixed-citation>
</ref>
<ref id="btz041-B8">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Chaisson</surname><given-names>M.J.</given-names></name></person-group>
<etal>et al</etal> (<year>2018</year>) 
<article-title>Multi-platform discovery of haplotype-resolved structural variation in human genomes</article-title>. https://doi.org/10.1101/193144.</mixed-citation>
</ref>
<ref id="btz041-B9">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Dale</surname><given-names>R.K.</given-names></name></person-group>
<etal>et al</etal> (<year>2011</year>) 
<article-title>Pybedtools: a flexible python library for manipulating genomic datasets and annotations</article-title>. <source/>Bioinformatics, <volume>27</volume>, <fpage>3423</fpage>–<lpage>3424</lpage>.<pub-id pub-id-type="pmid">21949271</pub-id></mixed-citation>
</ref>
<ref id="btz041-B10">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>English</surname><given-names>A.C.</given-names></name></person-group>
<etal>et al</etal> (<year>2014</year>) 
<article-title>PBHoney: identifying genomic variants via long-read discordance and interrupted mapping</article-title>. <source/>BMC Bioinformatics, <volume>15</volume>, <fpage>180.</fpage><pub-id pub-id-type="pmid">24915764</pub-id></mixed-citation>
</ref>
<ref id="btz041-B11">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>English</surname><given-names>A.C.</given-names></name></person-group>
<etal>et al</etal> (<year>2015</year>) 
<article-title>Assessing structural variation in a personal genome–towards a human reference diploid genome</article-title>. <source/>BMC Genomics, <volume>16</volume>, <fpage>286.</fpage><pub-id pub-id-type="pmid">25886820</pub-id></mixed-citation>
</ref>
<ref id="btz041-B12">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Gonzalez-Garay</surname><given-names>M.L.</given-names></name></person-group> (<year>2014</year>) 
<article-title>The road from next-generation sequencing to personalized medicine</article-title>. <source/>Pers. Med., <volume>11</volume>, <fpage>523</fpage>–<lpage>544</lpage>.</mixed-citation>
</ref>
<ref id="btz041-B13">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Gowda</surname><given-names>K.C.</given-names></name>, <name name-style="western"><surname>Diday</surname><given-names>E.</given-names></name></person-group> (<year>1991</year>) 
<article-title>Symbolic clustering using a new dissimilarity measure</article-title>. <source/>Pattern Recogn., <volume>24</volume>, <fpage>567</fpage>–<lpage>578</lpage>.</mixed-citation>
</ref>
<ref id="btz041-B14">
<mixed-citation publication-type="other">
<person-group person-group-type="author"><name name-style="western"><surname>Hagberg</surname><given-names>A.</given-names></name></person-group>
<etal>et al</etal> (<year>2008</year>) Exploring network structure, dynamics, and function using NetworkX. <italic>Technical report</italic>. Los Alamos National Lab (LANL), Los Alamos, NM, USA.</mixed-citation>
</ref>
<ref id="btz041-B15">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Huang</surname><given-names>C.R.L.</given-names></name></person-group>
<etal>et al</etal> (<year>2012</year>) 
<article-title>Active transposition in genomes</article-title>. <source/>Annu. Rev. Genet., <volume>46</volume>, <fpage>651</fpage>–<lpage>675</lpage>.<pub-id pub-id-type="pmid">23145912</pub-id></mixed-citation>
</ref>
<ref id="btz041-B16">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Huddleston</surname><given-names>J.</given-names></name>, <name name-style="western"><surname>Eichler</surname><given-names>E.E.</given-names></name></person-group> (<year>2016</year>) 
<article-title>An incomplete understanding of human genetic variation</article-title>. <source/>Genetics, <volume>202</volume>, <fpage>1251</fpage>–<lpage>1254</lpage>.<pub-id pub-id-type="pmid">27053122</pub-id></mixed-citation>
</ref>
<ref id="btz041-B17">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Huddleston</surname><given-names>J.</given-names></name></person-group>
<etal>et al</etal> (<year>2016</year>) 
<article-title>Discovery and genotyping of structural variation from long-read haploid genome sequence data</article-title>. <source/>Genome Res., <volume>27</volume>, <fpage>677</fpage>–<lpage>685</lpage>.<pub-id pub-id-type="pmid">27895111</pub-id></mixed-citation>
</ref>
<ref id="btz041-B18">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Jain</surname><given-names>M.</given-names></name></person-group>
<etal>et al</etal> (<year>2015</year>) 
<article-title>Improved data analysis for the MinION nanopore sequencer</article-title>. <source/>Nat. Methods, <volume>12</volume>, <fpage>351.</fpage><pub-id pub-id-type="pmid">25686389</pub-id></mixed-citation>
</ref>
<ref id="btz041-B19">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Jain</surname><given-names>M.</given-names></name></person-group>
<etal>et al</etal> (<year>2018</year>) 
<article-title>Nanopore sequencing and assembly of a human genome with ultra-long reads</article-title>. <source/>Nat. Biotechnol., <volume>36</volume>, <fpage>338.</fpage><pub-id pub-id-type="pmid">29431738</pub-id></mixed-citation>
</ref>
<ref id="btz041-B20">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H.</given-names></name></person-group> (<year>2018</year>) 
<article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>. <source/>Bioinformatics, <volume>1</volume>, <fpage>7.</fpage></mixed-citation>
</ref>
<ref id="btz041-B21">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Li</surname><given-names>H.</given-names></name></person-group>
<etal>et al</etal> (<year>2009</year>) 
<article-title>The sequence alignment/map format and SAMtools</article-title>. <source/>Bioinformatics, <volume>25</volume>, <fpage>2078</fpage>–<lpage>2079</lpage>.<pub-id pub-id-type="pmid">19505943</pub-id></mixed-citation>
</ref>
<ref id="btz041-B22">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Loomis</surname><given-names>E.W.</given-names></name></person-group>
<etal>et al</etal> (<year>2013</year>) 
<article-title>Sequencing the unsequenceable: expanded CGG-repeat alleles of the fragile X gene</article-title>. <source/>Genome Res., <volume>23</volume>, <fpage>121</fpage>–<lpage>128</lpage>.<pub-id pub-id-type="pmid">23064752</pub-id></mixed-citation>
</ref>
<ref id="btz041-B23">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Marschall</surname><given-names>T.</given-names></name></person-group>
<etal>et al</etal> (<year>2012</year>) 
<article-title>CLEVER: clique-enumerating variant finder</article-title>. <source/>Bioinformatics, <volume>28</volume>, <fpage>2875</fpage>–<lpage>2882</lpage>.<pub-id pub-id-type="pmid">23060616</pub-id></mixed-citation>
</ref>
<ref id="btz041-B24">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Merker</surname><given-names>J.D.</given-names></name></person-group>
<etal>et al</etal> (<year>2018</year>) 
<article-title>Long-read genome sequencing identifies causal structural variation in a mendelian disease</article-title>. <source/>Genet. Med., <volume>20</volume>, <fpage>159.</fpage><pub-id pub-id-type="pmid">28640241</pub-id></mixed-citation>
</ref>
<ref id="btz041-B25">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Pabinger</surname><given-names>S.</given-names></name></person-group>
<etal>et al</etal> (<year>2014</year>) 
<article-title>A survey of tools for variant analysis of next-generation genome sequencing data</article-title>. <source/>Brief. Bioinform., <volume>15</volume>, <fpage>256</fpage>–<lpage>278</lpage>.<pub-id pub-id-type="pmid">23341494</pub-id></mixed-citation>
</ref>
<ref id="btz041-B26">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Parikh</surname><given-names>H.</given-names></name></person-group>
<etal>et al</etal> (<year>2016</year>) 
<article-title>svclassify: a method to establish benchmark structural variant calls</article-title>. <source/>BMC Genomics, <volume>17</volume>, <fpage>64.</fpage><pub-id pub-id-type="pmid">26772178</pub-id></mixed-citation>
</ref>
<ref id="btz041-B27">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Redon</surname><given-names>R.</given-names></name></person-group>
<etal>et al</etal> (<year>2006</year>) 
<article-title>Global variation in copy number in the human genome</article-title>. <source/>Nature, <volume>444</volume>, <fpage>444</fpage>–<lpage>454</lpage>.<pub-id pub-id-type="pmid">17122850</pub-id></mixed-citation>
</ref>
<ref id="btz041-B28">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Ross</surname><given-names>M.G.</given-names></name></person-group>
<etal>et al</etal> (<year>2013</year>) 
<article-title>Characterizing and measuring bias in sequence data</article-title>. <source/>Genome Biol., <volume>14</volume>, <fpage>R51.</fpage><pub-id pub-id-type="pmid">23718773</pub-id></mixed-citation>
</ref>
<ref id="btz041-B29">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Saxena</surname><given-names>R.K.</given-names></name></person-group>
<etal>et al</etal> (<year>2014</year>) 
<article-title>Structural variations in plant genomes</article-title>. <source/>Brief. Funct. Genomics, <volume>13</volume>, <fpage>296</fpage>–<lpage>307</lpage>.<pub-id pub-id-type="pmid">24907366</pub-id></mixed-citation>
</ref>
<ref id="btz041-B30">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Sebat</surname><given-names>J.</given-names></name></person-group>
<etal>et al</etal> (<year>2007</year>) 
<article-title>Strong association of de novo copy number mutations with autism</article-title>. <source/>Science, <volume>316</volume>, <fpage>445</fpage>–<lpage>449</lpage>.<pub-id pub-id-type="pmid">17363630</pub-id></mixed-citation>
</ref>
<ref id="btz041-B31">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Sedlazeck</surname><given-names>F.J.</given-names></name></person-group>
<etal>et al</etal> (<year>2018a</year>) 
<article-title>Accurate detection of complex structural variations using single-molecule sequencing</article-title>. <source/>Nat. Methods, <volume>15</volume>, <fpage>461</fpage>–<lpage>468</lpage>.<pub-id pub-id-type="pmid">29713083</pub-id></mixed-citation>
</ref>
<ref id="btz041-B32">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Sedlazeck</surname><given-names>F.J.</given-names></name></person-group>
<etal>et al</etal> (<year>2018b</year>) 
<article-title>Piercing the dark matter: bioinformatics of long-range sequencing and mapping</article-title>. <source/>Nat. Rev. Genet., <volume>19</volume>, <fpage>329</fpage>–<lpage>346</lpage>.<pub-id pub-id-type="pmid">29599501</pub-id></mixed-citation>
</ref>
<ref id="btz041-B33">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Stewart</surname><given-names>C.</given-names></name></person-group>
<etal>et al</etal> (<year>2011</year>) 
<article-title>A comprehensive map of mobile element insertion polymorphisms in humans</article-title>. <source/>PLoS Genet., <volume>7</volume>, <fpage>e1002236.</fpage><pub-id pub-id-type="pmid">21876680</pub-id></mixed-citation>
</ref>
<ref id="btz041-B34">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Stöcker</surname><given-names>B.K.</given-names></name></person-group>
<etal>et al</etal> (<year>2016</year>) 
<article-title>Simlord: simulation of long read data</article-title>. <source/>Bioinformatics, <volume>32</volume>, <fpage>2704</fpage>–<lpage>2706</lpage>.<pub-id pub-id-type="pmid">27166244</pub-id></mixed-citation>
</ref>
<ref id="btz041-B35">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Sudmant</surname><given-names>P.H.</given-names></name></person-group>
<etal>et al</etal> (<year>2015</year>) 
<article-title>An integrated map of structural variation in 2, 504 human genomes</article-title>. <source/>Nature, <volume>526</volume>, <fpage>75</fpage>–<lpage>81</lpage>.<pub-id pub-id-type="pmid">26432246</pub-id></mixed-citation>
</ref>
<ref id="btz041-B36">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Weischenfeldt</surname><given-names>J.</given-names></name></person-group>
<etal>et al</etal> (<year>2013</year>) 
<article-title>Phenotypic impact of genomic structural variation: insights from and for human disease</article-title>. <source/>Nat. Rev. Genet., <volume>14</volume>, <fpage>125</fpage>–<lpage>138</lpage>.<pub-id pub-id-type="pmid">23329113</pub-id></mixed-citation>
</ref>
<ref id="btz041-B37">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Willems</surname><given-names>T.</given-names></name></person-group>
<etal>et al</etal> (<year>2014</year>) 
<article-title>The landscape of human STR variation</article-title>. <source/>Genome Res., <volume>24</volume>, <fpage>1894</fpage>–<lpage>1904</lpage>.<pub-id pub-id-type="pmid">25135957</pub-id></mixed-citation>
</ref>
<ref id="btz041-B38">
<mixed-citation publication-type="journal">
<person-group person-group-type="author"><name name-style="western"><surname>Zook</surname><given-names>J.M.</given-names></name></person-group>
<etal>et al</etal> (<year>2014</year>) 
<article-title>Integrating human sequence data sets provides a resource of benchmark SNP and indel genotype calls</article-title>. <source/>Nat. Biotechnol., <volume>32</volume>, <fpage>246</fpage>–<lpage>251</lpage>.<pub-id pub-id-type="pmid">24531798</pub-id></mixed-citation>
</ref>
</ref-list>
</back>
</article>
</pmc-articleset>